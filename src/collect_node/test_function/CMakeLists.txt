cmake_minimum_required(VERSION 3.0.2)
project(test_function)
set (CMAKE_CXX_STANDARD 14)
set(CMAKE_CXX_FLAGS " -g -O0 ")
set( HJ_WORKSPACE_PATH "../..")
set(PLATFORM "amd64" CACHE STRING "amd64, i386, arm64_rk, etc.")
set(INSTALL_DEVEL_PATH collect_node)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON) 
if(${RELEASE_VER} STREQUAL "debug")
  message("minos debug")
elseif(${RELEASE_VER} STREQUAL "release")
  message("minos release")
  add_definitions(-DCONFIG_ENABLE_LOG=4)
endif()
find_package(catkin REQUIRED COMPONENTS message_generation rostime roscpp )
include_directories("${HJ_WORKSPACE_PATH}/hj_interface/include")
include_directories(include ${catkin_INCLUDE_DIRS})
include_directories("${HJ_WORKSPACE_PATH}/thirdparty/include")
include_directories("${HJ_WORKSPACE_PATH}/thirdparty/include/ziplib")
include_directories("${HJ_WORKSPACE_PATH}/collect_node/test_function1/include")
link_directories(${catkin_LIBRARY_DIRS})
link_directories("${HJ_WORKSPACE_PATH}/hj_interface/platforms/${PLATFORM}")
link_directories("${HJ_WORKSPACE_PATH}/thirdparty/platforms/${PLATFORM}")
message("minos :${HJ_WORKSPACE_PATH}/../devel/lib/collect_node")
add_definitions(-DFUNCTION_NAME="test_load_so")
catkin_package(CATKIN_DEPENDS message_runtime std_msgs)
add_library(test_function src/test_load_so.cpp)
target_link_libraries(test_function ${catkin_LIBRARIES} dl)
target_link_libraries(test_function base_framework  big_data   )
set_target_properties(test_function PROPERTIES
  LIBRARY_OUTPUT_DIRECTORY ${CATKIN_DEVEL_PREFIX}/lib/${INSTALL_DEVEL_PATH})
