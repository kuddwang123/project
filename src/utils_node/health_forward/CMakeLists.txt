cmake_minimum_required(VERSION 3.0.2)
project(health_forward)
set (CMAKE_CXX_STANDARD 14)
set( HJ_WORKSPACE_PATH "../..")
set(PLATFORM "amd64" CACHE STRING "amd64, i386, arm64_rk, etc.")
set(INSTALL_DEVEL_PATH utils_node)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(RELEASE_VER "debug" CACHE STRING "debug or release")
if(${RELEASE_VER} STREQUAL "debug")

elseif(${RELEASE_VER} STREQUAL "release")
  add_definitions(-DCONFIG_ENABLE_LOG=4)
  set(CMAKE_BUILD_TYPE "RELEASE")
  set(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall")
endif()
find_package(catkin REQUIRED COMPONENTS rostime roscpp)

include_directories(include ${catkin_INCLUDE_DIRS})
include_directories("${HJ_WORKSPACE_PATH}/thirdparty/include")
include_directories("${HJ_WORKSPACE_PATH}/hj_interface/include")
link_directories(${catkin_LIBRARY_DIRS})
link_directories("${HJ_WORKSPACE_PATH}/hj_interface/platforms/${PLATFORM}")
link_directories("${HJ_WORKSPACE_PATH}/thirdparty/platforms/${PLATFORM}")
add_definitions(-DFUNCTION_NAME="health_forward")
catkin_package(CATKIN_DEPENDS message_runtime std_msgs)
add_library(health_forward src/health_forward.cpp)
target_link_libraries(health_forward ${catkin_LIBRARIES} dl)
target_link_libraries(health_forward base_framework)
set_target_properties(health_forward PROPERTIES
  LIBRARY_OUTPUT_DIRECTORY ${CATKIN_DEVEL_PREFIX}/lib/${INSTALL_DEVEL_PATH})
